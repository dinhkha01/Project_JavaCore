-- Set temporary delimiter
DELIMITER //

-- Drop existing procedures if they exist
DROP PROCEDURE IF EXISTS sp_GetAllTechnologies //
DROP PROCEDURE IF EXISTS sp_AddTechnology //
DROP PROCEDURE IF EXISTS sp_DeleteTechnology //
DROP PROCEDURE IF EXISTS sp_UpdateTechnology //
DROP PROCEDURE IF EXISTS sp_GetTechnologyById //

-- 1. Get list of all technologies (including deleted ones)
CREATE PROCEDURE sp_GetAllTechnologies()
BEGIN
    SELECT * FROM technology
    ORDER BY id;
END //

-- 2. Add new technology (without validation)
CREATE PROCEDURE sp_AddTechnology(IN tech_name VARCHAR(100), OUT result INT)
BEGIN
    INSERT INTO technology (name) VALUES (tech_name);
    SET result = LAST_INSERT_ID();
END //

-- 3. Delete technology
CREATE PROCEDURE sp_DeleteTechnology(IN tech_id INT, OUT result INT)
BEGIN
    DECLARE has_dependencies BOOLEAN DEFAULT FALSE;

    -- Check if technology has any dependencies
    SELECT EXISTS(
        SELECT 1 FROM candidate_technology WHERE technologyId = tech_id
        UNION
        SELECT 1 FROM recruitment_position_technology WHERE technologyId = tech_id
    ) INTO has_dependencies;

    IF has_dependencies = TRUE THEN
        -- Has dependencies, soft delete by renaming
        -- Đổi tên thành [tên cũ_deleted]
        UPDATE technology
        SET name = CONCAT(name, '_deleted')
        WHERE id = tech_id;

        IF ROW_COUNT() > 0 THEN
            SET result = 1; -- Success (soft delete)
        ELSE
            SET result = 0; -- Failed
        END IF;
    ELSE
        -- No dependencies, delete completely
        DELETE FROM technology WHERE id = tech_id;
        IF ROW_COUNT() > 0 THEN
            SET result = 2; -- Success (hard delete)
        ELSE
            SET result = 0; -- Failed
        END IF;
    END IF;
END //

-- 4. Update technology (without validation)
CREATE PROCEDURE sp_UpdateTechnology(IN tech_id INT, IN new_name VARCHAR(100), OUT result INT)
BEGIN
    UPDATE technology SET name = new_name WHERE id = tech_id;
    IF ROW_COUNT() > 0 THEN
        SET result = 1; -- Success updated
    ELSE
        SET result = 0; -- Failed
    END IF;
END //

-- 5. Find technology by ID
CREATE PROCEDURE sp_GetTechnologyById(IN tech_id INT)
BEGIN
    SELECT * FROM technology WHERE id = tech_id;
END //

-- Restore default delimiter
DELIMITER ;